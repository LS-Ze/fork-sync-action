name: Sync Forked Repos

on:
  schedule:
    - cron: '0 16 * * *' # 每天 UTC 时间 16:00（即北京时间凌晨 00:00）运行一次
  workflow_dispatch: # 手动触发工作流

jobs:
  sync-forks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set timezone to Asia/Shanghai
        run: |
          echo "Setting timezone to Asia/Shanghai"
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Display current time
        run: |
          echo "Current time in Beijing: $(date)"

      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Run the Sync Forked Repos script
        run: |
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Fetching the list of repositories for OWNER: $OWNER..."
            # 获取同步前的仓库列表和更新时间
            before_sync_repos=$(gh repo list "$OWNER" --limit 200 --fork --json nameWithOwner,isFork,updatedAt)
            
            # 初始化错误计数器和仓库列表
            error_count=0
            failed_repos=()
            synced_repos=()
            
            # 遍历所有fork仓库进行同步
            while read -r repo; do
                nameWithOwner=$(echo "$repo" | jq -r '.nameWithOwner')
                before_updated_at=$(echo "$repo" | jq -r '.updatedAt')
                
                echo "[$(date '+%Y-%m-%d %H:%M:%S')] Syncing forked repository: $nameWithOwner..."
                
                # 尝试同步仓库
                if gh repo sync "$nameWithOwner" 2>&1; then
                    echo "[$(date '+%Y-%m-%d %H:%M:%S')] Successfully synced: $nameWithOwner"
                    # 记录成功同步的仓库和其同步前的更新时间
                    synced_repos+=("$nameWithOwner|$before_updated_at")
                else
                    echo "[$(date '+%Y-%m-%d %H:%M:%S')] Failed to sync: $nameWithOwner" >&2
                    error_count=$((error_count + 1))
                    failed_repos+=("$nameWithOwner")
                fi
            done < <(echo "$before_sync_repos" | jq -c '.[]')
            
            # 等待10秒让GitHub API更新状态
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Waiting for GitHub API to update..."
            sleep 10
            
            # 检查已同步仓库的更新状态
            updated_repos=()
            for repo_info in "${synced_repos[@]}"; do
                nameWithOwner="${repo_info%|*}"
                before_updated_at="${repo_info#*|}"
                
                # 获取当前更新时间
                after_updated_at=$(gh repo view "$nameWithOwner" --json updatedAt | jq -r '.updatedAt')
                
                # 比较更新时间
                if [ "$before_updated_at" != "$after_updated_at" ]; then
                    updated_repos+=("$nameWithOwner")
                fi
            done
            
            # 显示同步结果
            echo ""
            echo "--------------------------------"
            # 显示更新的仓库
            echo "Check the repository update status..."
            if [ ${#updated_repos[@]} -gt 0 ]; then
                echo "[$(date '+%Y-%m-%d %H:%M:%S')] Repositories with updates from upstream:"
                printf '%s\n' "${updated_repos[@]}"
                echo ""
            fi
            
            # 显示失败的仓库
            if [ $error_count -gt 0 ]; then
                echo "[$(date '+%Y-%m-%d %H:%M:%S')] Sync completed with $error_count failures"
                echo "Failed repositories:"
                printf '%s\n' "${failed_repos[@]}"
                exit 1
            else
                echo "[$(date '+%Y-%m-%d %H:%M:%S')] All repositories synced successfully"
            fi
            echo "--------------------------------"

        env:
            GH_TOKEN: ${{ secrets.SYNC_GITHUB_TOKEN }}
            OWNER: ${{ github.repository_owner }}
